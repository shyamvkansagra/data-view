{"version":3,"sources":["datatable/Row.js","datatable/index.js","server-simulation/server.js","page/index.js","App.js","reportWebVitals.js","index.js"],"names":["Row","this","props","rowData","onRowClick","indexVal","columns","isChecked","toggleRowSelection","className","onClick","type","e","stopPropagation","id","checked","onChange","Object","keys","map","rdk","idx","href","target","rel","src","alt","numeric","Component","DataTable","state","selectedRows","newSelectedRows","Array","from","indexOf","splice","push","setState","toggleSelectAll","rows","length","forEach","r","cellSpacing","cellPadding","c","style","width","label","index","React","localApis","key","value","window","localStorage","setItem","JSON","stringify","parse","getItem","DataApis","loadAll","scb","fetch","then","response","json","data","catch","error","console","getData","limit","offset","sampleColumns","sampleRows","Page","dataRows","view","isLoaded","switchView","rowIndex","alert","fetchData","newOffset","newData","DataAPIs","albumData","columnsToShow","rowsToShow","totalRows","dataLength","hasMore","next","loader","onSelectionChange","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.91a47da8.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass Row extends Component {\n\trender() {\n\t\tconst { rowData, onRowClick, indexVal, columns, isChecked, toggleRowSelection } = this.props;\n\t\treturn (\n\t\t\t<tr className=\"row-container\" onClick={() => onRowClick(rowData, indexVal+1)}>\n\t\t\t\t<td>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\tonClick={e => {\n\t\t\t\t\t\t\te.stopPropagation();\n\t\t\t\t\t\t\ttoggleRowSelection(rowData.id);\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tchecked={isChecked}\n\t\t\t\t\t\tonChange={() => {}}\n\t\t\t\t\t/>\n\t\t\t\t</td>\n\t\t\t\t{Object.keys(rowData).map((rdk, idx) => {\n\t\t\t\t\tif (rdk === \"url\") {\n\t\t\t\t\t\treturn <td>\n\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\tonClick={e => { e.stopPropagation(); }}\n\t\t\t\t\t\t\t\thref={rowData[rdk]}\n\t\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\t\trel=\"noreferrer\"\n\t\t\t\t\t\t\t>Link</a>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t} else if (rdk === \"thumbnailUrl\") {\n\t\t\t\t\t\treturn <td><img className=\"img-thumbnail\" src={rowData[rdk]} alt=\"thumbnail\" /></td>\n\t\t\t\t\t}\n\t\t\t\t\treturn <td className={columns[idx].numeric ? \"right-align\" : \"\"}><span>{rowData[rdk]}</span></td>\n\t\t\t\t})}\n\t\t\t</tr>\n\t\t);\n\t}\n}\n\nexport default Row;","import React from 'react';\n\n// Import components\nimport Row from './Row';\n\n// Import styles\nimport './dataTable.scss';\n\nclass DataTable extends React.Component {\n\tstate = {\n\t\tselectedRows: []\n\t}\n\n\ttoggleRowSelection = (id) => {\n\t\tconst { selectedRows } = this.state;\n\t\tvar newSelectedRows = Array.from(selectedRows);\n\t\tif (newSelectedRows.indexOf(id) > -1) {\n\t\t\tnewSelectedRows.splice(newSelectedRows.indexOf(id), 1);\n\t\t} else {\n\t\t\tnewSelectedRows.push(id);\n\t\t}\n\t\tthis.setState({ selectedRows: newSelectedRows });\n\t}\n\n\ttoggleSelectAll = () => {\n\t\tconst { selectedRows } = this.state;\n\t\tconst { rows } = this.props;\n\t\tconst newSelectedRows = Array.from(selectedRows);\n\t\tif (newSelectedRows.length) {\n\t\t\tthis.setState({ selectedRows: [] });\n\t\t} else {\n\t\t\trows.forEach(r => {\n\t\t\t\tif (newSelectedRows.indexOf(r.id) < 0) {\n\t\t\t\t\tnewSelectedRows.push(r.id);\n\t\t\t\t}\n\t\t\t});\n\t\t\tthis.setState({ selectedRows: newSelectedRows });\n\t\t}\n\t}\n\n\trender() {\n\t\tconst { rows, columns, onRowClick } = this.props;\n\t\tconst { selectedRows } = this.state;\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<h3>Acme Inc. data table</h3>\n\t\t\t\t\t<table className=\"table-container\" cellSpacing=\"0\" cellPadding=\"0\">\n\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<th><input onChange={() => {}} onClick={this.toggleSelectAll} checked={selectedRows.length === rows.length} type=\"checkbox\"></input></th>\n\t\t\t\t\t\t\t\t{columns.map(c => (\n\t\t\t\t\t\t\t\t\t<th key={c.id} style={{ width: c.width || \"auto\" }}>{c.label}</th>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\n\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t{rows.map((r, index) => (\n\t\t\t\t\t\t\t\t<Row\n\t\t\t\t\t\t\t\t\tkey={r.id}\n\t\t\t\t\t\t\t\t\tisChecked={selectedRows.indexOf(r.id) > -1}\n\t\t\t\t\t\t\t\t\ttoggleRowSelection={this.toggleRowSelection}\n\t\t\t\t\t\t\t\t\tindexVal={index}\n\t\t\t\t\t\t\t\t\trowData={r}\n\t\t\t\t\t\t\t\t\tonRowClick={onRowClick}\n\t\t\t\t\t\t\t\t\tcolumns={columns}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</tbody>\n\t\t\t\t\t</table>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default DataTable;","const localApis = {\n\tsetLocal: (key, value) => window.localStorage.setItem(key, JSON.stringify(value)),\n\tgetLocal: (key) => JSON.parse(window.localStorage.getItem(key))\n};\n\nconst DataApis = {\n\tloadAll: (scb) => {\n\t\tconst albumData = localApis.getLocal(\"albumData\");\n\t\tif (!albumData) {\n\t\t\tfetch('https://jsonplaceholder.typicode.com/photos')\n\t\t\t\t.then(response => response.json())\n\t\t\t\t.then(data => {\n\t\t\t\t\tlocalApis.setLocal(\"albumData\", data);\n\t\t\t\t\tscb();\n\t\t\t\t})\n\t\t\t\t.catch((error) => {\n\t\t\t\t\tconsole.error('Error:', error);\n\t\t\t\t});\n\t\t} else {\n\t\t\tscb();\n\t\t}\n\t},\n\tgetData: (limit, offset) => {\n\t\tconst albumData = localApis.getLocal(\"albumData\") || [];\n\t\treturn albumData.splice(offset, limit);\n\t}\n};\n\nexport default DataApis;","import React, { Component } from 'react';\n\n// Import components\nimport DataTable from '../datatable';\nimport InfiniteScroll from 'react-infinite-scroll-component';\n\n// Import data API\nimport DataAPIs from '../server-simulation/server';\n\n// Import styles\nimport './page.scss';\n\nconst sampleColumns = [\n\t{\n\t\t\"id\": 1,\n\t\t\"label\": \"ID\",\n\t\t\"numeric\": true,\n\t\t\"width\": \"10px\"\n\t},\n\t{\n\t\t\"id\": 2,\n\t\t\"label\": \"Product\",\n\t\t\"numeric\": false,\n\t\t\"width\": \"200px\"\n\t},\n\t{\n\t\t\"id\": 3,\n\t\t\"label\": \"Price\",\n\t\t\"numeric\": true,\n\t\t\"width\": \"10px\"\n\t}\n];\n\nconst sampleRows = [\n\t{\n\t\t\"id\": 1,\n\t\t\"product\": \"abc\",\n\t\t\"price\": 15.2\n\t},\n\t{\n\t\t\"id\": 2,\n\t\t\"product\": <div><span>React node product</span></div>,\n\t\t\"price\": \"$15.5\"\n\t}\n];\n\n\nconst columns = [\n\t{\n\t\t\"id\": 1,\n\t\t\"label\": \"Album ID\",\n\t\t\"numeric\": true,\n\t\t\"width\": \"10%\"\n\t},\n\t{\n\t\t\"id\": 2,\n\t\t\"label\": \"ID\",\n\t\t\"numeric\": true,\n\t\t\"width\": \"50px\"\n\t},\n\t{\n\t\t\"id\": 3,\n\t\t\"label\": \"Title\",\n\t\t\"numeric\": false,\n\t},\n\t{\n\t\t\"id\": 4,\n\t\t\"label\": \"Link\",\n\t\t\"numeric\": true,\n\t\t\"width\": \"100px\"\n\t},\n\t{\n\t\t\"id\": 5,\n\t\t\"label\": \"Thumbnail\",\n\t\t\"numeric\": false,\n\t\t\"width\": \"\"\n\t}\n];\n\nclass Page extends Component {\n\tstate = {\n\t\tdataRows: [],\n\t\tlimit: 10,\n\t\toffset: 0,\n\t\tview: \"real\",\n\t\tisLoaded: false\n\t};\n\n\tcomponentDidMount() {\n\t\tDataAPIs.loadAll(() => {\n\t\t\tconst albumData = DataAPIs.getData(10, 0);\n\t\t\tthis.setState({ isLoaded: true, dataRows: albumData });\t\t\t\n\t\t});\n\t}\n\n\tswitchView = () => {\n\t\tthis.setState({ view: this.state.view === \"sample\" ? \"real\" : \"sample\" });\n\t}\n\n\tonRowClick = (rowData, rowIndex) => {\n\t\talert(\"You clicked row no: \" + rowIndex + \"\\nData: \" + JSON.stringify(rowData));\n\t}\n\n\tfetchData = () => {\n\t\tconst { limit, offset, dataRows } = this.state;\n\t\tconst newOffset = offset + limit;\n\t\tconst newData = DataAPIs.getData(limit, newOffset);\n\t\tthis.setState({ offset: newOffset, dataRows: [...dataRows, ...newData] });\n\t}\n\n\trender() {\n\t\tconst { view, dataRows, isLoaded } = this.state;\n\t\tconst columnsToShow = view === \"sample\" ? sampleColumns : columns;\n\t\tconst rowsToShow = view === \"sample\" ? sampleRows : dataRows;\n\t\tconst totalRows = view === \"sample\" ? 2 : 5000;\n\t\tif (!isLoaded) {\n\t\t\treturn (\n\t\t\t\t<div>Loading...</div>\n\t\t\t);\n\t\t}\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<button className=\"data-switcher\" onClick={this.switchView}>Switch sample/real data</button>\n\t\t\t\t<InfiniteScroll\n\t\t\t\t\tdataLength={rowsToShow.length}\n\t\t\t\t\thasMore={rowsToShow.length < totalRows}\n\t\t\t\t\tnext={this.fetchData}\n\t\t\t\t\tloader={<h4>Loading...</h4>}\n\t\t\t\t>\n\t\t\t\t\t<DataTable\n\t\t\t\t\t\tcolumns={columnsToShow}\n\t\t\t\t\t\trows={rowsToShow}\n\t\t\t\t\t\tonRowClick={this.onRowClick}\n\t\t\t\t\t\tonSelectionChange={() => {}}\n\t\t\t\t\t/>\n\t\t\t\t</InfiniteScroll>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Page;","// Import components\nimport Page from './page';\n\n// Import styles\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Page />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}