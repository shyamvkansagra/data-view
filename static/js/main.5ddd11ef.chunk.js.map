{"version":3,"sources":["datatable/Row.js","datatable/index.js","server-simulation/server.js","page/index.js","App.js","reportWebVitals.js","index.js"],"names":["Row","this","props","rowData","onRowClick","indexVal","columns","toggleRowSelection","isChecked","className","onClick","type","id","e","stopPropagation","onChange","Object","keys","map","rdk","idx","style","width","href","target","rel","src","alt","numeric","Component","DataTable","state","selectedRows","newSelectedRows","Array","from","indexOf","splice","push","setState","toggleSelectAll","rows","checkboxElems","document","querySelectorAll","length","forEach","cb","checked","r","renderRow","fetchData","cellSpacing","cellPadding","c","label","loadMore","rowHeight","threshold","data","renderLoading","height","containerHeight","ref","infiniteScroll","scrollRef","virtualScroll","React","localApis","key","value","window","localStorage","setItem","JSON","stringify","parse","getItem","DataApis","loadAll","scb","fetch","then","response","json","catch","error","console","getData","limit","offset","Page","dataRows","isLoaded","switchView","view","rowIndex","alert","newOffset","newData","DataAPIs","albumData","columnsToShow","rowsToShow","onSelectionChange","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.5ddd11ef.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass Row extends Component {\n\trender() {\n\t\tconst { rowData, onRowClick, indexVal, columns, isChecked, toggleRowSelection } = this.props;\n\t\treturn (\n\t\t\t<tr className=\"row-container\" onClick={() => onRowClick(rowData, indexVal+1)}>\n\t\t\t\t<td>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\tid={rowData.id}\n\t\t\t\t\t\tonClick={e => {\n\t\t\t\t\t\t\te.stopPropagation();\n\t\t\t\t\t\t\ttoggleRowSelection(rowData.id);\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tonChange={() => {}}\n\t\t\t\t\t/>\n\t\t\t\t</td>\n\t\t\t\t{Object.keys(rowData).map((rdk, idx) => {\n\t\t\t\t\tif (rdk === \"url\") {\n\t\t\t\t\t\treturn <td style={{width: columns[idx].width || \"auto\"}}>\n\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\tonClick={e => { e.stopPropagation(); }}\n\t\t\t\t\t\t\t\thref={rowData[rdk]}\n\t\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\t\trel=\"noreferrer\"\n\t\t\t\t\t\t\t>Link</a>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t} else if (rdk === \"thumbnailUrl\") {\n\t\t\t\t\t\treturn <td style={{width: columns[idx].width || \"auto\"}}><img className=\"img-thumbnail\" src={rowData[rdk]} alt=\"thumbnail\" /></td>\n\t\t\t\t\t}\n\t\t\t\t\treturn <td style={{width: columns[idx].width || \"auto\"}} className={columns[idx].numeric ? \"right-align\" : \"\"}><span>{rowData[rdk]}</span></td>\n\t\t\t\t})}\n\t\t\t</tr>\n\t\t);\n\t}\n}\n\nexport default Row;","import React from 'react';\n\n// Import components\nimport Row from './Row';\nimport InfiniteScroll from 'react-virtualized-infinite-scroll';\n\n// Import styles\nimport './dataTable.scss';\n\nclass DataTable extends React.Component {\n\tstate = {\n\t\tselectedRows: [],\n\t}\n\n\ttoggleRowSelection = (id) => {\n\t\tconst { selectedRows } = this.state;\n\t\tvar newSelectedRows = Array.from(selectedRows);\n\t\tif (newSelectedRows.indexOf(id) > -1) {\n\t\t\tnewSelectedRows.splice(newSelectedRows.indexOf(id), 1);\n\t\t} else {\n\t\t\tnewSelectedRows.push(id);\n\t\t}\n\t\tthis.setState({ selectedRows: newSelectedRows });\n\t}\n\n\ttoggleSelectAll = () => {\n\t\tconst { selectedRows } = this.state;\n\t\tconst { rows } = this.props;\n\t\tconst newSelectedRows = Array.from(selectedRows);\n\t\tconst checkboxElems = document.querySelectorAll('input[type=\"checkbox\"]');\n\t\tif (newSelectedRows.length) {\n\t\t\tthis.setState({ selectedRows: [] });\n\t\t\tcheckboxElems.forEach(cb => cb.checked = false);\n\t\t} else {\n\t\t\trows.forEach(r => {\n\t\t\t\tif (newSelectedRows.indexOf(r.id) < 0) {\n\t\t\t\t\tnewSelectedRows.push(r.id);\n\t\t\t\t}\n\t\t\t});\n\t\t\tthis.setState({ selectedRows: newSelectedRows });\n\t\t\tcheckboxElems.forEach(cb => cb.checked = true);\n\t\t}\n\t}\n\n\trenderRow = (r) => {\n\t\tconst { selectedRows } = this.state;\n\t\tconst { columns, onRowClick } = this.props;\n\t\treturn <Row\n\t\t\tkey={r.id}\n\t\t\tisChecked={selectedRows.indexOf(r.id) > -1}\n\t\t\ttoggleRowSelection={this.toggleRowSelection}\n\t\t\tindexVal={r.id - 1}\n\t\t\trowData={r}\n\t\t\tonRowClick={onRowClick}\n\t\t\tcolumns={columns}\n\t\t/>\n\t}\n\n\trender() {\n\t\tconst { rows, columns, fetchData } = this.props;\n\t\tconst { selectedRows } = this.state;\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<h3>Acme Inc. data table</h3>\n\t\t\t\t\t<table className=\"table-container\" cellSpacing=\"0\" cellPadding=\"0\">\n\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<th><input onChange={() => {}} onClick={this.toggleSelectAll} checked={selectedRows.length === rows.length} type=\"checkbox\"></input></th>\n\t\t\t\t\t\t\t\t{columns.map(c => (\n\t\t\t\t\t\t\t\t\t<th key={c.id} style={{ width: c.width || \"auto\" }}>{c.label}</th>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\n\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t<InfiniteScroll\n                loadMore={fetchData}\n                renderRow={this.renderRow}\n                rowHeight={100}\n                threshold={2}\n                data={rows}\n                renderLoading={(\n                    <div style={{ height: 40 }}>\n                        Loading...\n                    </div>\n                )}\n                containerHeight={800}\n                ref={(infiniteScroll) => this.infiniteScroll = infiniteScroll}\n                scrollRef={(virtualScroll) => this.virtualScroll = virtualScroll}\n            />\n\t\t\t\t\t\t\t{/* {rows.map((r, index) => (\n\t\t\t\t\t\t\t\t<Row\n\t\t\t\t\t\t\t\t\tkey={r.id}\n\t\t\t\t\t\t\t\t\tisChecked={selectedRows.indexOf(r.id) > -1}\n\t\t\t\t\t\t\t\t\ttoggleRowSelection={this.toggleRowSelection}\n\t\t\t\t\t\t\t\t\tindexVal={index}\n\t\t\t\t\t\t\t\t\trowData={r}\n\t\t\t\t\t\t\t\t\tonRowClick={onRowClick}\n\t\t\t\t\t\t\t\t\tcolumns={columns}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t))} */}\n\t\t\t\t\t\t</tbody>\n\t\t\t\t\t</table>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default DataTable;","const localApis = {\n\tsetLocal: (key, value) => window.localStorage.setItem(key, JSON.stringify(value)),\n\tgetLocal: (key) => JSON.parse(window.localStorage.getItem(key))\n};\n\nconst DataApis = {\n\tloadAll: (scb) => {\n\t\tconst albumData = localApis.getLocal(\"albumData\");\n\t\tif (!albumData) {\n\t\t\tfetch('https://jsonplaceholder.typicode.com/photos')\n\t\t\t\t.then(response => response.json())\n\t\t\t\t.then(data => {\n\t\t\t\t\tlocalApis.setLocal(\"albumData\", data);\n\t\t\t\t\tscb();\n\t\t\t\t})\n\t\t\t\t.catch((error) => {\n\t\t\t\t\tconsole.error('Error:', error);\n\t\t\t\t});\n\t\t} else {\n\t\t\tscb();\n\t\t}\n\t},\n\tgetData: (limit, offset) => {\n\t\tconst albumData = localApis.getLocal(\"albumData\") || [];\n\t\treturn albumData.splice(offset, limit);\n\t}\n};\n\nexport default DataApis;","import React, { Component } from 'react';\n\n// Import components\nimport DataTable from '../datatable';\n\n// Import data API\nimport DataAPIs from '../server-simulation/server';\n\n// Import styles\nimport './page.scss';\n\nconst columns = [\n\t{\n\t\t\"id\": 1,\n\t\t\"label\": \"Album ID\",\n\t\t\"numeric\": true,\n\t\t\"width\": \"10%\"\n\t},\n\t{\n\t\t\"id\": 2,\n\t\t\"label\": \"ID\",\n\t\t\"numeric\": true,\n\t\t\"width\": \"50px\"\n\t},\n\t{\n\t\t\"id\": 3,\n\t\t\"label\": \"Title\",\n\t\t\"numeric\": false,\n\t\t\"width\": \"500px\"\n\t},\n\t{\n\t\t\"id\": 4,\n\t\t\"label\": \"Link\",\n\t\t\"numeric\": true,\n\t\t\"width\": \"100px\"\n\t},\n\t{\n\t\t\"id\": 5,\n\t\t\"label\": \"Thumbnail\",\n\t\t\"numeric\": false,\n\t\t\"width\": \"\"\n\t}\n];\n\nclass Page extends Component {\n\tstate = {\n\t\tdataRows: [],\n\t\tlimit: 10,\n\t\toffset: 0,\n\t\tisLoaded: false\n\t};\n\n\tcomponentDidMount() {\n\t\tDataAPIs.loadAll(() => {\n\t\t\tconst albumData = DataAPIs.getData(10, 0);\n\t\t\tthis.setState({ isLoaded: true, dataRows: albumData });\t\t\t\n\t\t});\n\t}\n\n\tswitchView = () => {\n\t\tthis.setState({ view: this.state.view === \"sample\" ? \"real\" : \"sample\" });\n\t}\n\n\tonRowClick = (rowData, rowIndex) => {\n\t\talert(\"You clicked row no: \" + rowIndex + \"\\nData: \" + JSON.stringify(rowData));\n\t}\n\n\tfetchData = () => {\n\t\tconst { limit, offset, dataRows } = this.state;\n\t\tconst newOffset = offset + limit;\n\t\tconst newData = DataAPIs.getData(limit, newOffset);\n\t\tthis.setState({ offset: newOffset, dataRows: [...dataRows, ...newData] });\n\t}\n\n\trender() {\n\t\tconst { dataRows, isLoaded } = this.state;\n\t\tconst columnsToShow = columns;\n\t\tconst rowsToShow = dataRows;\n\t\tif (!isLoaded) {\n\t\t\treturn (\n\t\t\t\t<div>Loading...</div>\n\t\t\t);\n\t\t}\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<DataTable\n\t\t\t\t\tfetchData={this.fetchData}\n\t\t\t\t\tcolumns={columnsToShow}\n\t\t\t\t\trows={rowsToShow}\n\t\t\t\t\tonRowClick={this.onRowClick}\n\t\t\t\t\tonSelectionChange={() => {}}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Page;","// Import components\nimport Page from './page';\n\n// Import styles\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Page />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}